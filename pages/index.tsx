import Head from 'next/head'
import Header from '../components/Header'
import HomeCard from '../components/HomeCard'
import HomeSecondSection from '../components/HomeSecondSection'
import Footer from '../components/Footer'
import { useEffect, useState } from 'react'
import { breedType } from '../components/SearchBar'
import { useRouter } from 'next/router'
import LoadingSpinner from '../components/LoadingSpinner'
import RedirectingScreen from '../components/RedirectingScreen'
import ErrorMessage from '../components/ErrorMessage'
import fetchBreeds from '../utils/fetchBreeds'


export default function Home() {
    const [breedsList, setBreedsList] = useState<breedType[]>([])
    const [breedExamples, setbreedExamples] = useState<breedType[]>([])
    const [isLoading, setIsLoading] = useState(true)
    const [isRedirecting, setIsRedirecting] = useState(false)
    const [errorFetch, setErrorFetch] = useState(false)
    const router = useRouter()

    useEffect(() => {
        fetchData()
    }, [])

    const fetchData = () => {
        setIsLoading(true)
        setErrorFetch(false)

        fetchBreeds()
            .then(data => {
                setBreedsList(data.list)
                setbreedExamples(data.examples)
                setIsLoading(false)
            })
            .catch(err => {
                console.log(err.message);
                setIsLoading(false)
                setErrorFetch(true)
            })
    }

    const redirectTo = (path: string) => {
        setIsRedirecting(true)
        router.push(path)
    }

    return (
        <div className="px-4 sm:px-14 md:px-20">
            <Head>
                <title>CatWiki</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
                <link rel="preconnect" href="https://fonts.googleapis.com" />
                <link rel="preconnect" href="https://fonts.gstatic.com" />
                <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet" />
            </Head>


            <div className='min-h-screen flex flex-col'>
                <Header />

                {isLoading ? <LoadingSpinner color='#291507' />
                    :
                    errorFetch ? <ErrorMessage reload={fetchData} />
                        :
                        <>
                            <HomeCard breedsList={breedsList} examples={breedExamples} redirectTo={redirectTo} />

                            <HomeSecondSection />
                        </>
                }

                <Footer />
            </div>

            {isRedirecting && <RedirectingScreen />}
        </div>
    )
}
